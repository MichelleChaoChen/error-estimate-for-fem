Search.setIndex({"docnames": ["amr", "classical_methods", "convergence_experiments", "fem_solver", "index", "plot_utilities", "set_up", "train", "utils"], "filenames": ["amr.rst", "classical_methods.rst", "convergence_experiments.rst", "fem_solver.rst", "index.rst", "plot_utilities.rst", "set_up.rst", "train.rst", "utils.rst"], "titles": ["Adaptive Mesh Refinement", "Classical Error Estimation Methods", "Convergence Experiments", "Finite Element Solver", "Welcome to Error Estimation for FEM Using Neural Networks\u2019s documentation!", "Plotting Utilities", "Getting Started Guide", "Neural Network Training &amp; Tuning", "Utilities"], "terms": {"amr": [0, 2, 4, 5, 8], "pipelin": [0, 4], "method": [0, 2, 4, 5, 7], "adaptive_mesh_refin": [0, 4], "toler": [0, 2], "max_it": [0, 2], "bc": 0, "source_func": 0, "error_estim": 0, "perform": [0, 2, 5, 7, 8], "1": [0, 2], "initi": [0, 7], "paramet": [0, 2, 3, 5, 7, 8], "problem": 0, "2": [0, 2], "comput": [0, 3, 5, 8], "base": [0, 2, 5], "solut": [0, 3, 5, 8], "coars": 0, "3": [0, 2], "until": 0, "global": [0, 2, 5, 8], "error": [0, 2, 5, 8], "fall": [0, 5], "below": [0, 5], "desir": [0, 5], "threshold": [0, 5], "4": 0, "return": [0, 3, 5, 7, 8], "final": 0, "maximum": [0, 2], "iter": [0, 2, 5, 8], "boundari": [0, 3, 8], "condit": [0, 3, 8], "arrai": [0, 8], "valu": [0, 8], "describ": 0, "sourc": [0, 3, 5, 8], "function": [0, 3, 5, 7, 8], "user": [0, 4], "select": 0, "estim": [0, 2, 5, 8], "data": [0, 2, 4, 5, 7, 8], "from": [0, 5, 8], "run": [0, 5, 8], "build_nn_error_estim": [0, 4], "source_func_str": 0, "nn_fine": 0, "nn_coars": 0, "mesh_coars": 0, "build": [0, 7], "an": [0, 4], "curri": 0, "so": [0, 8], "i": [0, 4, 5, 7], "uniform": 0, "interfac": 0, "get": 0, "differ": [0, 5, 7], "e": [0, 5], "g": 0, "recoveri": [0, 1, 2, 4, 5], "string": [0, 3, 8], "format": [0, 3, 7, 8], "fenic": [0, 3], "neural": [0, 2, 5], "network": [0, 2, 5], "fine": 0, "element": [0, 4], "A": 0, "extend_boundari": [0, 4], "sol": [0, 1, 8], "grid": 0, "step": 0, "extend": 0, "us": [0, 2, 3, 5, 7, 8], "virtual": 0, "point": 0, "The": [0, 3, 4, 5, 7, 8], "boudari": 0, "size": [0, 2, 5, 8], "stepsiz": 0, "extend_boundary_rot": [0, 4], "prevent": 0, "jump": 0, "being": 0, "equal": 0, "0": 0, "generate_data": [0, 4], "new_sol": 0, "new_grid": 0, "old_sol": 0, "old_grid": 0, "creat": [0, 2, 8], "featur": 0, "vector": [0, 4], "all": [0, 8], "new": 0, "fem": [0, 3, 5, 8], "both": 0, "which": [0, 7], "wa": 0, "predict": [0, 7], "get_error_estim": [0, 4], "provid": [0, 4, 5], "local": [0, 4], "one": 0, "everi": 0, "current": [0, 7], "each": [0, 5], "err_pr": 0, "global_error": 0, "split": 0, "halv": 0, "high": 0, "two": [0, 5], "ar": 0, "merg": 0, "too": 0, "low": 0, "relative_chang": [0, 4], "grad_new": 0, "grad_old": 0, "rel": 0, "chang": [0, 5], "between": [0, 5], "batch": 0, "quantiti": 0, "most": 0, "recent": 0, "gradient": [0, 8], "patch": 0, "run_adaptive_mesh_refin": [0, 4], "wrapper": 0, "around": 0, "can": [0, 4, 5, 8], "pass": 0, "class": [1, 7], "classical_method": 1, "mesh": [1, 2, 3, 4, 5, 8], "__init__": [1, 7], "__weakref__": [1, 7], "list": [1, 7], "weak": [1, 7], "refer": [1, 7], "object": [1, 7], "defin": [1, 7], "convergence_experi": [2, 4], "file_nn": 2, "file_explicit": 2, "file_recoveri": 2, "verifi": 2, "compar": 2, "number": [2, 5, 7, 8], "refin": [2, 4, 5], "convergence_plot": [2, 4], "nn_file": 2, "exp_fil": 2, "rec_fil": 2, "sever": 2, "plot": [2, 4, 7, 8], "demonstr": 2, "adapt": [2, 4], "comparison": [2, 5], "mse": [2, 5], "averag": [2, 5, 8], "over": [2, 5], "compars": 2, "need": [2, 5, 7], "file": [2, 8], "contain": [2, 8], "explicit": [2, 5], "fem_solv": 3, "mesh_new": 3, "dirichletbc": 3, "f_str": [3, 4, 8], "goal": 4, "thi": [4, 5, 7], "project": 4, "develop": 4, "finit": 4, "properti": 4, "input": 4, "output": 4, "we": 4, "have": [4, 7], "incorpor": 4, "test": [4, 7], "its": 4, "efficaci": 4, "train": 4, "altern": 4, "restrict": 4, "dimens": 4, "guid": 4, "tune": 4, "neuralnetwork": [4, 7], "solver": 4, "converg": [4, 5], "experi": [4, 5], "classic": 4, "compute_average_el": [4, 5], "compute_mse_error_estim": [4, 5], "plot_average_iter": [4, 5], "plot_mse_error_estim": [4, 5], "plot_number_el": [4, 5], "plot_refin": [4, 5], "energi": [4, 8], "error_mast": [4, 8], "exact_gradi": [4, 8], "exact_sol": [4, 8], "process_amr_data": [4, 8], "write_amr_data": [4, 8], "index": 4, "modul": 4, "search": [4, 7], "page": 4, "present": 5, "visualis": [5, 7], "our": 5, "plot_util": 5, "multipl": 5, "THe": 5, "how": [5, 7], "far": 5, "awai": 5, "exact": [5, 8], "numer": 5, "avg_run_nn": 5, "avg_run_rec": 5, "data_nn": 5, "data_exp": 5, "data_rec": 5, "visual": 5, "result": 5, "found": [5, 7], "directori": [5, 7], "increas": 5, "offer": 5, "x": [5, 8], "est_global_error": [5, 8], "ex_global_error": [5, 8], "n_element": 5, "plot_titl": 5, "color": 5, "true": [5, 7], "show": 5, "befor": 5, "domain": [5, 8], "whether": 5, "scheme": 5, "should": [5, 7], "default": [5, 7], "dataset": 7, "epoch": 7, "tuner": 7, "build_model": 7, "hp": 7, "model": 7, "hyperparamet": 7, "best": 7, "alreadi": 7, "been": 7, "determin": 7, "custom_loss": 7, "y_true": 7, "y_pred": 7, "construct": 7, "loss": 7, "label": 7, "evalu": [7, 8], "plot_training_loss": 7, "histori": 7, "evolv": 7, "call": 7, "add": 7, "constructor": 7, "save": 7, "name": [7, 8], "h5": 7, "best_hp": 7, "100": 7, "tune_model": 7, "a_k": 8, "freq": 8, "bc_1": 8, "norm": 8, "coeffici": 8, "frequenc": 8, "xi": 8, "computs": 8, "coeff_rang": 8, "freq_rang": 8, "n": 8, "random": 8, "sine": 8, "rang": 8, "term": 8, "sum": 8, "filenam": 8, "read": 8, "back": 8, "dictionari": 8, "per": 8, "nr_element": 8, "write": 8, "process": 8, "later": 8}, "objects": {"": [[0, 0, 0, "-", "adaptive_mesh_refinement"], [1, 0, 0, "-", "classical_methods"], [2, 0, 0, "-", "convergence_experiments"], [3, 0, 0, "-", "fem_solver"], [5, 0, 0, "-", "plot_utilities"], [8, 0, 0, "-", "utils"]], "adaptive_mesh_refinement": [[0, 1, 1, "", "adaptive_mesh_refinement"], [0, 1, 1, "", "build_nn_error_estimator"], [0, 1, 1, "", "extend_boundary"], [0, 1, 1, "", "extend_boundary_rotate"], [0, 1, 1, "", "generate_data"], [0, 1, 1, "", "get_error_estimate"], [0, 1, 1, "", "refine"], [0, 1, 1, "", "relative_change"], [0, 1, 1, "", "run_adaptive_mesh_refinement"]], "classical_methods": [[1, 2, 1, "", "Recovery"]], "classical_methods.Recovery": [[1, 3, 1, "", "__init__"], [1, 4, 1, "", "__weakref__"]], "convergence_experiments": [[2, 1, 1, "", "convergence_experiments"], [2, 1, 1, "", "convergence_plots"]], "fem_solver": [[3, 1, 1, "", "solver"]], "plot_utilities": [[5, 1, 1, "", "compute_average_elements"], [5, 1, 1, "", "compute_mse_error_estimate"], [5, 1, 1, "", "plot_average_iterations"], [5, 1, 1, "", "plot_mse_error_estimate"], [5, 1, 1, "", "plot_number_elements"], [5, 1, 1, "", "plot_refinement"]], "train": [[7, 2, 1, "", "NeuralNetwork"]], "train.NeuralNetwork": [[7, 3, 1, "", "__init__"], [7, 4, 1, "", "__weakref__"], [7, 3, 1, "", "build_model"], [7, 3, 1, "", "custom_loss"], [7, 3, 1, "", "evaluate"], [7, 3, 1, "", "plot_training_loss"], [7, 3, 1, "", "save"], [7, 3, 1, "", "train"], [7, 3, 1, "", "tune_model"]], "utils": [[8, 1, 1, "", "energy"], [8, 1, 1, "", "error_master"], [8, 1, 1, "", "exact_gradient"], [8, 1, 1, "", "exact_sol"], [8, 1, 1, "", "f_str"], [8, 1, 1, "", "process_amr_data"], [8, 1, 1, "", "write_amr_data"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"adapt": 0, "mesh": 0, "refin": 0, "classic": 1, "error": [1, 4], "estim": [1, 4], "method": 1, "converg": 2, "experi": 2, "finit": 3, "element": 3, "solver": 3, "welcom": 4, "fem": 4, "us": 4, "neural": [4, 7], "network": [4, 7], "": 4, "document": 4, "get": [4, 6], "start": [4, 6], "technic": 4, "util": [4, 5, 8], "indic": 4, "tabl": 4, "plot": 5, "guid": 6, "train": 7, "tune": 7}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Adaptive Mesh Refinement": [[0, "adaptive-mesh-refinement"]], "Classical Error Estimation Methods": [[1, "classical-error-estimation-methods"]], "Convergence Experiments": [[2, "module-convergence_experiments"]], "Finite Element Solver": [[3, "module-fem_solver"]], "Welcome to Error Estimation for FEM Using Neural Networks\u2019s documentation!": [[4, "welcome-to-error-estimation-for-fem-using-neural-networks-s-documentation"]], "Getting Started": [[4, null]], "Technical Documentation": [[4, null]], "Utilities": [[4, null], [8, "module-utils"]], "Indices and tables": [[4, "indices-and-tables"]], "Plotting Utilities": [[5, "plotting-utilities"]], "Getting Started Guide": [[6, "getting-started-guide"]], "Neural Network Training & Tuning": [[7, "neural-network-training-tuning"]]}, "indexentries": {"adaptive_mesh_refinement": [[0, "module-adaptive_mesh_refinement"]], "adaptive_mesh_refinement() (in module adaptive_mesh_refinement)": [[0, "adaptive_mesh_refinement.adaptive_mesh_refinement"]], "build_nn_error_estimator() (in module adaptive_mesh_refinement)": [[0, "adaptive_mesh_refinement.build_nn_error_estimator"]], "extend_boundary() (in module adaptive_mesh_refinement)": [[0, "adaptive_mesh_refinement.extend_boundary"]], "extend_boundary_rotate() (in module adaptive_mesh_refinement)": [[0, "adaptive_mesh_refinement.extend_boundary_rotate"]], "generate_data() (in module adaptive_mesh_refinement)": [[0, "adaptive_mesh_refinement.generate_data"]], "get_error_estimate() (in module adaptive_mesh_refinement)": [[0, "adaptive_mesh_refinement.get_error_estimate"]], "module": [[0, "module-adaptive_mesh_refinement"], [1, "module-classical_methods"], [2, "module-convergence_experiments"], [3, "module-fem_solver"], [5, "module-plot_utilities"], [8, "module-utils"]], "refine() (in module adaptive_mesh_refinement)": [[0, "adaptive_mesh_refinement.refine"]], "relative_change() (in module adaptive_mesh_refinement)": [[0, "adaptive_mesh_refinement.relative_change"]], "run_adaptive_mesh_refinement() (in module adaptive_mesh_refinement)": [[0, "adaptive_mesh_refinement.run_adaptive_mesh_refinement"]], "recovery (class in classical_methods)": [[1, "classical_methods.Recovery"]], "__init__() (classical_methods.recovery method)": [[1, "classical_methods.Recovery.__init__"]], "__weakref__ (classical_methods.recovery attribute)": [[1, "classical_methods.Recovery.__weakref__"]], "classical_methods": [[1, "module-classical_methods"]], "convergence_experiments": [[2, "module-convergence_experiments"]], "convergence_experiments() (in module convergence_experiments)": [[2, "convergence_experiments.convergence_experiments"]], "convergence_plots() (in module convergence_experiments)": [[2, "convergence_experiments.convergence_plots"]], "fem_solver": [[3, "module-fem_solver"]], "solver() (in module fem_solver)": [[3, "fem_solver.solver"]], "compute_average_elements() (in module plot_utilities)": [[5, "plot_utilities.compute_average_elements"]], "compute_mse_error_estimate() (in module plot_utilities)": [[5, "plot_utilities.compute_mse_error_estimate"]], "plot_average_iterations() (in module plot_utilities)": [[5, "plot_utilities.plot_average_iterations"]], "plot_mse_error_estimate() (in module plot_utilities)": [[5, "plot_utilities.plot_mse_error_estimate"]], "plot_number_elements() (in module plot_utilities)": [[5, "plot_utilities.plot_number_elements"]], "plot_refinement() (in module plot_utilities)": [[5, "plot_utilities.plot_refinement"]], "plot_utilities": [[5, "module-plot_utilities"]], "neuralnetwork (class in train)": [[7, "train.NeuralNetwork"]], "__init__() (train.neuralnetwork method)": [[7, "train.NeuralNetwork.__init__"]], "__weakref__ (train.neuralnetwork attribute)": [[7, "train.NeuralNetwork.__weakref__"]], "build_model() (train.neuralnetwork method)": [[7, "train.NeuralNetwork.build_model"]], "custom_loss() (train.neuralnetwork method)": [[7, "train.NeuralNetwork.custom_loss"]], "evaluate() (train.neuralnetwork method)": [[7, "train.NeuralNetwork.evaluate"]], "plot_training_loss() (train.neuralnetwork method)": [[7, "train.NeuralNetwork.plot_training_loss"]], "save() (train.neuralnetwork method)": [[7, "train.NeuralNetwork.save"]], "train() (train.neuralnetwork method)": [[7, "train.NeuralNetwork.train"]], "tune_model() (train.neuralnetwork method)": [[7, "train.NeuralNetwork.tune_model"]], "energy() (in module utils)": [[8, "utils.energy"]], "error_master() (in module utils)": [[8, "utils.error_master"]], "exact_gradient() (in module utils)": [[8, "utils.exact_gradient"]], "exact_sol() (in module utils)": [[8, "utils.exact_sol"]], "f_str() (in module utils)": [[8, "utils.f_str"]], "process_amr_data() (in module utils)": [[8, "utils.process_amr_data"]], "utils": [[8, "module-utils"]], "write_amr_data() (in module utils)": [[8, "utils.write_amr_data"]]}})